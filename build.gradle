import java.text.SimpleDateFormat

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

def pluginVersion = '3.0.0'

allprojects {

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    group 'org.hackedserver'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    processResources { expand projectVersion: pluginVersion }

    repositories {
        mavenLocal()
        mavenCentral()
        // server software
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://nexus.velocitypowered.com/repository/maven-public/' }
        // BStats
        maven { url 'https://repo.codemc.org/repository/maven-public' }
        // ProtocolLib
        maven { url 'https://repo.dmulloy2.net/repository/public/' }
        // JitPack
        maven { url = 'https://jitpack.io' }
        // nbt api (used by command api)
        maven { url = 'https://repo.codemc.org/repository/maven-public/' }
        // adventure
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        // commandAPI snapshots
        maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
    }
}

project(':hackedserver-core') {

    dependencies {
        implementation group: 'net.kyori', name: 'adventure-text-minimessage', version: '4.12.0-SNAPSHOT'

        implementation group: 'io.github.xtomlj', name: 'xtomlj', version: '1.1.0'
    }

}

project(':hackedserver-spigot') {

    dependencies {
        compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.19.3-R0.1-SNAPSHOT'
        compileOnly group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '5.0.0-SNAPSHOT'
        compileOnly group: 'net.kyori', name: 'adventure-text-minimessage', version: '4.12.0'
        compileOnly group: 'io.netty', name: 'netty-all', version: '4.1.68.Final'
        compileOnly project(path: ':hackedserver-core', configuration: 'shadow')

        implementation group: 'dev.jorel', name: 'commandapi-shade', version: '8.7.0'
        implementation group: 'net.kyori', name: 'adventure-platform-bukkit', version: '4.2.0'
        implementation group: 'org.bstats', name: 'bstats-bukkit', version: '2.2.1'
    }

}

project(':hackedserver-bungeecord') {

    repositories {
        maven { url 'https://mvn.exceptionflug.de/repository/exceptionflug-public/' }
    }

    dependencies {
        compileOnly group: 'net.md-5', name: 'bungeecord-api', version: '1.19-R0.1-SNAPSHOT'
        compileOnly group: 'net.kyori', name: 'adventure-text-minimessage', version: '4.12.0-SNAPSHOT'
        compileOnly project(path: ':hackedserver-core', configuration: 'shadow')

        implementation group: 'net.kyori', name: 'adventure-platform-bungeecord', version: '4.2.0'
        implementation group: 'org.bstats', name: 'bstats-bungeecord', version: '2.2.1'
    }

}

project(':hackedserver-velocity') {

    repositories {
        maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
    }

    dependencies {
        compileOnly group: 'net.kyori', name: 'adventure-text-minimessage', version: '4.10.0-SNAPSHOT'
        compileOnly project(path: ':hackedserver-core', configuration: 'shadow')
        compileOnly group: 'com.velocitypowered', name: 'velocity-api', version: '3.1.1'
        annotationProcessor group: 'com.velocitypowered', name: 'velocity-api', version: '3.1.1'

        implementation group: 'org.bstats', name: 'bstats-velocity', version: '2.2.1'
    }

}

shadowJar {
    relocate 'org.bstats', 'org.hackedserver.shaded.bstats'
    relocate 'org.tomlj', 'org.hackedserver.shaded.tomlj'
    relocate 'net.kyori', 'org.hackedserver.shaded.kyori'
    relocate 'org.bstats', 'org.hackedserver.shaded.bstats'
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Version': pluginVersion,
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd' 'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} " +
                        "(${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} " +
                        "${System.properties['os.version']}"
        )
    }
}

dependencies {
    implementation project(path: 'hackedserver-core', configuration: 'shadow')
    implementation project(path: 'hackedserver-spigot', configuration: 'shadow')
    implementation project(path: 'hackedserver-bungeecord', configuration: 'shadow')
    implementation project(path: 'hackedserver-velocity', configuration: 'shadow')
    implementation group: 'net.kyori', name: 'adventure-text-minimessage', version: '4.10.0-SNAPSHOT'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.30'
}

compileJava.dependsOn clean
build.dependsOn shadowJar

boolean copyJar = project.findProperty('copyJar')
String pluginPath = project.findProperty('hacked_server_plugin_path')
String velocityPluginPath = project.findProperty('velocity_plugin_path')
String bungeePluginPath = project.findProperty('bungee_plugin_path')

if (copyJar) {

    task copyJarTask(type: Copy) {
        if (pluginPath != null) {
            from 'build/libs/hackedserver-all.jar'
            into pluginPath
            doLast {
                println('Copied to plugin directory ' + pluginPath)
            }
        }
        if (velocityPluginPath != null) {
            from 'build/libs/hackedserver-all.jar'
            into velocityPluginPath
            doLast {
                println('Copied to plugin directory ' + velocityPluginPath)
            }
        }
        if (bungeePluginPath != null) {
            from 'build/libs/hackedserver-all.jar'
            into bungeePluginPath
            doLast {
                println('Copied to plugin directory ' + bungeePluginPath)
            }
        }
    }


    copyJarTask.dependsOn('shadowJar')
    tasks.named('build', DefaultTask).get().dependsOn('copyJarTask')
}

